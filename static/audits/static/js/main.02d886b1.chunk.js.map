{"version":3,"sources":["components/AppliedRoute.js","components/PercentageCircle.js","components/Error.js","lib/JsonHelper.js","lib/DataLoader.js","lib/AuditData.js","containers/Home.js","components/LoaderButton.js","containers/Login.js","containers/Signup.js","audit/components/RadioAnswer.js","audit/components/RadioAnswers.js","audit/components/TextAreaAnswer.js","audit/components/TextBoxAnswer.js","audit/components/SelectAnswers.js","audit/components/Paragraphs.js","audit/containers/Page.js","lib/AdviceData.js","audit/containers/Advice.js","containers/Audit.js","containers/ResetPassword.js","containers/NotFound.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","config.js","index.js"],"names":["AppliedRoute","_ref","C","component","cProps","props","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","PercentageCircle","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","convertPropsToState","percent","leftTransformerDegree","rightTransformerDegree","setState","borderWidth","state","nextProps","className","style","width","radius","height","borderRadius","backgroundColor","bgcolor","left","id","borderTopLeftRadius","borderBottomLeftRadius","color","transform","borderTopRightRadius","borderBottomRightRadius","top","innerColor","children","textStyle","Component","defaultProps","disabled","Error","error","Alert","utf8ArrayToStr","array","out","i","len","c","char2","char3","length","String","fromCharCode","retrieveDataFile","asyncToGenerator","regenerator_default","mark","_callee","fileName","result","wrap","_context","prev","next","Storage","get","download","expires","sent","abrupt","JSON","parse","Body","stop","_x","apply","arguments","saveNewAudit","_ref2","_callee2","auditDataToSave","_context2","API","post","body","_x2","getUsersAudits","_ref3","_callee3","_context3","loadAuditById","_ref4","_callee4","auditAnswersId","_context4","concat","_x3","updateAudit","_ref5","_callee5","_context5","put","_x4","_x5","loadAuditData","auditData","Cache","setItem","lookupById","auditId","cachedAuditData","getCachedAuditData","lookupFromDataById","getUnstartedAudits","inProgressAudits","availableAudits","getInProgressAudits","map","audit","auditListDataFor","createAudit","emptyAnswers","params","emptyAnswersForPages","pages","auditAnswers","stringify","_ref6","_callee6","_context6","getItem","callback","_ref7","_callee7","inProgressAuditIds","auditsNotStarted","_context7","filter","availableAudit","includes","usersAudit","percentageComplete","Math","round","currentPage","complete","title","description","lastEditTime","matching","eachAudit","emptyAnswersForEachPage","forEach","page","pageId","emptyStateValuesForAnswers","questions","answers","question","questionId","Home","isLoading","unstartedAudits","isAuthenticated","t0","message","console","newAudit","history","push","process","_this2","Media","list","href","onClick","createNewAudit","key","src_components_PercentageCircle","aria-hidden","heading","Date","toLocaleDateString","renderUnstartedAudits","renderInProgressAudits","components_Error","renderAudits","renderLander","components_LoaderButton","text","loadingText","_ref$className","_ref$disabled","Button","ti","size","Login","handleChange","event","defineProperty","target","value","handleSubmit","preventDefault","Auth","signIn","email","password","userHasAuthenticated","Form","onSubmit","FormGroup","Label","for","Input","type","defaultValue","onChange","name","Link","to","block","validateForm","Signup","newUser","signUp","username","handleConfirmationSubmit","confirmSignUp","confirmationCode","confirmPassword","autoFocus","FormText","validateConfirmationForm","bsSize","renderForm","renderConfirmationForm","RadioAnswer","answer","inline","selected","check","defaultChecked","RadioAnswers","required","selectedAnswer","row","sm","Col","components_RadioAnswer","TextAreaAnswer","TextBoxAnswer","SelectAnswers","components_Paragraphs","input","split","output","Page","allprops","callbackWith","pageData","preventEnter","updatedAnswers","update","$set","getQuestionFromId","matchedQuestions","unansweredQuestions","questionIds","keys","unansweredQuestion","renderQuestions","components_RadioAnswers","components_TextAreaAnswer","components_TextBoxAnswer","components_SelectAnswers","previous","quit","Container","ButtonGroup","offset","loadAdviceData","getCachedAdviceData","getAdviceById","cachedAdviceData","findScoresForAnswers","pageAnswers","scores","calculationContext","answerId","scoresForAnswerId","scoreForAnswer","convertScoreToAdviceFromResults","scoreForPage","results","calcContext","x","matchingResult","find","formula","math","generateAdvice","adviceData","adviceForAuditAnswers","overallCalculationContext","overallSummaryScore","advice","adviceForPage","findPageById","score","warn","summary","dataWithPages","advicePage","Advice","renderScore","log","edit","advicePages","advicePageData","auditPage","tag","Audit","toggleCompletedStateOfAudit","answersSubmitted","saveSubmittedAnswers","then","catch","handleError","previousPage","pageNumber","nextPage","toSave","match","e","totalPages","prevPageFunction","nextPageFunction","viewAdviceFunction","Advice_Advice","Page_Page","Progress","ResetPassword","handleSendCodeClick","isSendingCode","forgotPassword","codeSent","handleConfirmClick","isConfirming","forgotPasswordSubmit","code","confirmed","validateCodeForm","validateResetForm","renderSuccessMessage","renderRequestCodeForm","containers_NotFound","AuthenticatedRoute","Redirect","location","pathname","search","UnauthenticatedRoute","redirect","url","undefined","window","replace","RegExp","exec","decodeURIComponent","querystring","Routes","childProps","Switch","path","exact","Audits","NotFound","App","_Component","authenticated","handleLogout","signOut","toggle","bind","assertThisInitialized","navIsOpen","isAuthenticating","inherits","createClass","_componentDidMount","currentSession","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","react","NavLink","withRouter","Boolean","hostname","config","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","src_config","objectSpread","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02d886b1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React, {Component} from 'react';\nimport \"./PercentageCircle.css\";\n\nclass PercentageCircle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            percent: 0,\n            borderWidth: 8,\n            leftTransformerDegree: '0deg',\n            rightTransformerDegree: '0deg',\n        };\n    }\n\n    componentDidMount() {\n        this.convertPropsToState(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.percent !== nextProps.percent) {\n            this.convertPropsToState(nextProps);\n        }\n    }\n\n    convertPropsToState = (props) => {\n        const percent = props.percent;\n        let leftTransformerDegree = '0deg';\n        let rightTransformerDegree = '0deg';\n        if (percent >= 50) {\n            rightTransformerDegree = '180deg';\n            leftTransformerDegree = (percent - 50) * 3.6 + 'deg';\n        } else {\n            rightTransformerDegree = percent * 3.6 + 'deg';\n            leftTransformerDegree = '0deg';\n        }\n\n        this.setState({\n            percent: props.percent,\n            borderWidth: props.borderWidth < 2 || !props.borderWidth ? 2 : props.borderWidth,\n            leftTransformerDegree: leftTransformerDegree,\n            rightTransformerDegree: rightTransformerDegree,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className=\"circle\"\n                style={{\n                    width: this.props.radius * 2,\n                    height: this.props.radius * 2,\n                    borderRadius: this.props.radius,\n                    backgroundColor: this.props.bgcolor,\n                }}\n            >\n                <div\n                    className=\"left-wrap\"\n                    style={{\n                        width: this.props.radius,\n                        height: this.props.radius * 2,\n                        left: 0,\n                    }}\n                >\n                    <div\n                        className=\"loader\"\n                        id=\"id1\"\n                        style={{\n                            left: this.props.radius,\n                            width: this.props.radius,\n                            height: this.props.radius * 2,\n                            borderTopLeftRadius: 0,\n                            borderBottomLeftRadius: 0,\n                            backgroundColor: this.props.color,\n                            transform: 'rotate(' + this.state.leftTransformerDegree + ')',\n                        }}\n                    />\n                </div>\n                <div\n                    className=\"right-wrap\"\n                    style={{\n                        width: this.props.radius,\n                        height: this.props.radius * 2,\n                        left: this.props.radius,\n                    }}\n                >\n                    <div\n                        className=\"loader2\"\n                        id=\"id2\"\n                        style={{\n                            left: -this.props.radius,\n                            width: this.props.radius,\n                            height: this.props.radius * 2,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                            backgroundColor: this.props.color,\n                            transform: 'rotate(' + this.state.rightTransformerDegree + ')',\n                        }}\n                    />\n                </div>\n                <div\n                    className=\"inner-circle\"\n                    style={{\n                        left: this.props.borderWidth,\n                        top: this.props.borderWidth,\n                        width: (this.props.radius - this.props.borderWidth) * 2,\n                        height: (this.props.radius - this.props.borderWidth) * 2,\n                        borderRadius: this.props.radius - this.props.borderWidth,\n                        backgroundColor: this.props.innerColor,\n                    }}\n                >\n                    {this.props.children ? this.props.children :\n                        <span className={'text ' + this.props.textStyle}>{this.props.percent}%</span>}\n                </div>\n            </div>\n        );\n    }\n}\n\n// PercentageCircle.propTypes = {\n//     color: React.PropTypes.string,\n//     bgcolor: React.PropTypes.string,\n//     innerColor: React.PropTypes.string,\n//     radius: React.PropTypes.number,\n//     percent: React.PropTypes.number,\n//     borderWidth: React.PropTypes.number,\n//     textStyle: React.PropTypes.string,\n// };\n\nPercentageCircle.defaultProps = {\n    color: '#000',\n    radius: 20,\n    percent: 0,\n    borderWidth: 2,\n    bgcolor: '#e3e3e3',\n    innerColor: '#fff',\n    disabled: false,\n    textStyle: '',\n};\n\nexport default PercentageCircle;\n","import React from 'react';\nimport {Alert} from 'reactstrap';\n\n\nconst Error = ({error}) => {\n    if (!error) return null;\n\n    return (\n        <Alert className=\"pl-0 pr-0\" color=\"danger\">{error}</Alert>\n    )\n};\nexport default Error","\nexport const utf8ArrayToStr = (array) => {\n    let out, i, len, c;\n    let char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                // 0xxxxxxx\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                // 110x xxxx   10xx xxxx\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                break;\n            case 14:\n                // 1110 xxxx  10xx xxxx  10xx xxxx\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n            default :\n                break;\n        }\n    }\n    return out;\n};\n","import {API, Storage} from \"aws-amplify\";\nimport {utf8ArrayToStr} from \"./JsonHelper\";\n\n\n\nexport const retrieveDataFile = async (fileName) => {\n    const result = await Storage.get(fileName, {download: true, expires: 3600000});\n    // console.log(\"Loaded audit.json \",result);\n    return JSON.parse(utf8ArrayToStr(result.Body));\n};\n\nexport const saveNewAudit = async (auditDataToSave) =>{\n    return API.post(\"audits\", \"/audits\", {\n        body: auditDataToSave\n    });\n};\n\nexport const getUsersAudits = async () =>  {\n    return API.get(\"audits\", \"/audits\");\n};\n\nexport const loadAuditById = async (auditAnswersId) => {\n    return API.get(\"audits\", `/audits/${auditAnswersId}`);\n};\n\nexport const updateAudit = async (auditAnswersId, auditDataToSave) => {\n    return API.put(\"audits\", `/audits/${auditAnswersId}`, {\n        body: auditDataToSave\n    });\n};","import { Cache } from \"aws-amplify\";\nimport {getUsersAudits, saveNewAudit, retrieveDataFile} from \"./DataLoader\"\n\nexport const loadAuditData = async () => {\n    Cache.setItem(\"auditData\", []);\n    const auditData = await retrieveDataFile(\"audit.json\");\n    Cache.setItem(\"auditData\", auditData, {expires: 3600000});\n    return auditData;\n};\n\nexport const lookupById = async (auditId) => {\n    const cachedAuditData = await getCachedAuditData();\n    return lookupFromDataById(cachedAuditData, auditId);\n};\n\nexport const getUnstartedAudits = async () => {\n    const inProgressAudits = await getUsersAudits();\n    return availableAudits(inProgressAudits);\n};\n\nexport const getInProgressAudits = async () => {\n    const inProgressAudits = await getUsersAudits();\n    const cachedAuditData = await getCachedAuditData();\n\n    return inProgressAudits.map(audit =>  {\n        return auditListDataFor(cachedAuditData, audit);\n    });\n};\n\n\n\nexport const createAudit = async (auditId) => {\n    const audit = await lookupById(auditId);\n\n    // Create empty answers\n    let emptyAnswers = emptyAnswersForPages(audit.pages);\n\n    let params = {\n        auditId: auditId,\n        auditAnswers: JSON.stringify(emptyAnswers)\n    };\n\n    return saveNewAudit(params);\n};\n\nconst getCachedAuditData = async () => {\n    return Cache.getItem(\"auditData\", {callback: loadAuditData});\n};\n\nconst availableAudits = async (inProgressAudits) => {\n    // Loop through audit ids of audits in progress / complete\n    // Filter those out from the cached audit data and return\n    const inProgressAuditIds = inProgressAudits.map(audit => audit.auditId);\n    const cachedAuditData = await getCachedAuditData();\n\n    const auditsNotStarted = cachedAuditData.filter(availableAudit => !(inProgressAuditIds.includes(availableAudit.auditId)));\n\n    // console.log(\"Audits not started\", auditsNotStarted);\n    return auditsNotStarted;\n};\n\nconst auditListDataFor =  (cachedAuditData, usersAudit) => {\n    const audit = lookupFromDataById(cachedAuditData, usersAudit.auditId);\n\n    // Calc how much theyve done. If page 0, then 0%, if last page then 100%\n    let percentageComplete = Math.round((usersAudit.currentPage / audit.pages.length) * 100);\n    if (usersAudit.complete) {\n        percentageComplete = 100;\n    }\n\n    return {\n        title: audit.title,\n        description: audit.description,\n        percentageComplete: percentageComplete,\n        lastEditTime: usersAudit.lastEditTime,\n        auditAnswersId: usersAudit.auditAnswersId\n    }\n};\n\n\nconst lookupFromDataById = (auditData, auditId) => {\n    const matching = auditData.filter(eachAudit => eachAudit.auditId === auditId);\n    if (matching.length !== 1) {\n        throw new Error(\"Could not find audit with id\" + auditId);\n    }\n    return matching[0];\n};\n\n// Generate empty answers for questions on a page\nconst emptyAnswersForPages = pages => {\n\n    let emptyAnswersForEachPage = {};\n    pages.forEach((page) => {\n        emptyAnswersForEachPage[page.pageId] = emptyStateValuesForAnswers(page.questions);\n    });\n    return emptyAnswersForEachPage;\n};\n\n\n// Generate empty answers for current question\nconst emptyStateValuesForAnswers = questions => {\n    let answers = {};\n    questions.forEach((question) => {\n        answers[question.questionId] = \"\";\n    });\n\n    return answers;\n};","import React, {Component} from \"react\";\nimport {Media} from \"reactstrap\";\nimport \"./Home.css\";\nimport PercentageCircle from '../components/PercentageCircle';\nimport Error from \"../components/Error\";\n\n\nimport {createAudit, getInProgressAudits, getUnstartedAudits} from \"../lib/AuditData\";\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            unstartedAudits: [],\n            inProgressAudits: [],\n            error: null\n        };\n    }\n\n    async componentDidMount() {\n\n        // Disable when working on train\n        if (!this.props.isAuthenticated) {\n            return;\n        }\n\n        try {\n            const unstartedAudits = await getUnstartedAudits();\n            const inProgressAudits = await getInProgressAudits();\n\n            this.setState({\n                inProgressAudits: inProgressAudits,\n                unstartedAudits: unstartedAudits,\n                error: null\n            });\n        } catch (e) {\n            this.setState({error: e.message});\n            console.error(\"Could not mount audit Home\",e);\n        }\n\n        this.setState({isLoading: false});\n    }\n\n\n    async createNewAudit(audit) {\n        this.setState({isLoading: true, error: null});\n\n        try {\n            const newAudit = await createAudit(audit.auditId);\n            // Now route to audit\n            this.props.history.push(`${process.env.PUBLIC_URL}/#/id/${newAudit.auditAnswersId}`);\n\n        } catch (e) {\n            this.setState({error: e.message});\n            console.error(\"Could not create new audit\",e);\n        }\n\n        this.setState({isLoading: false});\n    }\n\n    renderUnstartedAudits() {\n        const unstartedAudits = this.state.unstartedAudits;\n        if (unstartedAudits.length === 0) {\n            return <div/>;\n        }\n\n        return (\n            <Media list className=\"audits pl-0 pb-sm-3\">\n                <h3>Start a new audit</h3>\n                <div className=\"mb-2\">These are new audits that you can choose to start.</div>\n\n                    {unstartedAudits.map(\n                        (audit, i) =>\n                            <Media className=\"mb-3 hoverable\" href=\"#\" onClick={() => this.createNewAudit(audit)} key={i}>\n                                <Media className=\"align-self-center mr-sm-4 mr-1\" >\n                                    <PercentageCircle\n                                        radius={40}\n                                        borderWidth={8}\n                                        bgcolor=\"#ffc107\">\n                                        <span className=\"display-4 text\" aria-hidden>{\"\\uFF0B\"}</span>\n                                    </PercentageCircle>\n                                </Media>\n                                <Media body>\n                                    <Media heading>{audit.title}</Media>\n                                    <div>{audit.description}</div>\n                                </Media>\n                            </Media>\n                    )}\n            </Media>\n        );\n    }\n\n\n    renderInProgressAudits() {\n        const inProgressAudits = this.state.inProgressAudits;\n        if (inProgressAudits.length === 0) {\n            return <div/>;\n        }\n\n        return (\n            <Media list className=\"audits pl-0\">\n                <h3>Your existing audits</h3>\n                <div className=\"mb-2\">These are audits that are in progress or ones you have completed with the advice we provide.</div>\n                    {inProgressAudits.map(\n                        (audit, i) =>\n                            <Media className=\"mb-3 hoverable\" href={`${process.env.PUBLIC_URL}/#/id/${audit.auditAnswersId}`}  key={i}>\n                                <Media className=\"align-self-center mr-sm-4 mr-1\" >\n                                    <PercentageCircle\n                                        radius={40}\n                                        borderWidth={8}\n                                        percent={audit.percentageComplete}\n                                        color=\"#007bff\">\n                                    </PercentageCircle>\n                                </Media>\n                                <Media body>\n                                    <Media heading>{audit.title}</Media>\n                                    <div>{audit.description}</div>\n                                    <small className=\"text-muted\">{\"Updated \" + new Date(audit.lastEditTime).toLocaleDateString()}</small>\n                                </Media>\n                            </Media>\n                    )}\n\n            </Media>);\n    }\n\n    /**\n     * Shown if user is not logged in\n     */\n    renderLander() {\n        return (\n            <div className=\"lander\">\n                <h1>Innovation Unboxed Audit</h1>\n                <p>Audit your organisation to help identify and track your technical needs.</p>\n                <p>Please register an account, or sign in to complete an audit</p>\n            </div>\n        );\n    }\n\n    renderAudits() {\n        if (this.state.isLoading) {\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                {this.renderUnstartedAudits()}\n                {this.renderInProgressAudits()}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <Error error={this.state.error} />\n                {this.props.isAuthenticated ? this.renderAudits() : this.renderLander()}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"./LoaderButton.css\";\nimport { TiSpiral } from 'react-icons/ti';\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) =>\n  <Button\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && <TiSpiral size=\"1.8em\" className=\"spinning\" />}\n    {!isLoading ? text : loadingText}\n  </Button>;","import React, {Component} from \"react\";\nimport {Form, FormGroup, Input, Label} from \"reactstrap\";\nimport \"./Login.css\";\nimport {Auth} from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport {Link} from \"react-router-dom\";\nimport Error from \"../components/Error\"\n\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            error: null\n        };\n    }\n\n    validateForm() {\n        return this.state.email.length > 0 && this.state.password.length > 0;\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        this.setState({isLoading: true, error: null});\n\n        try {\n            await Auth.signIn(this.state.email, this.state.password);\n            this.props.userHasAuthenticated(true);\n        } catch (e) {\n            console.error(e.message);\n            this.setState({isLoading: false, error: e.message});\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <Error error={this.state.error}/>\n                <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            defaultValue={this.state.email}\n                            onChange={this.handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                        <Input\n                            id=\"password\"\n                            name=\"password\"\n                            defaultValue={this.state.password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                        />\n                    </FormGroup>\n                    <Link to=\"/login/reset\">Forgot password?</Link>\n\n                    <LoaderButton\n                        block\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                        text=\"Login\"\n                        loadingText=\"Logging in...\"\n                    />\n                </Form>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Form, FormGroup, FormText, Input, Label} from \"reactstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport Error from \"../components/Error\";\nimport \"./Signup.css\";\nimport { Auth } from \"aws-amplify\";\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            confirmationCode: \"\",\n            newUser: null,\n            error: null\n        };\n    }\n\n    validateForm() {\n        return (\n            this.state.email.length > 0 &&\n            this.state.password.length > 0 &&\n            this.state.password === this.state.confirmPassword\n        );\n    }\n\n    validateConfirmationForm() {\n        return this.state.confirmationCode.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        this.setState({ isLoading: true, error: null });\n\n        try {\n            const newUser = await Auth.signUp({\n                username: this.state.email,\n                password: this.state.password\n            });\n            this.setState({\n                newUser\n            });\n        } catch (e) {\n            // TODO - handle invalid username exception (UsernameExistsException)\n            // TODO - handle password length, type violations\n            console.error(e.message);\n            this.setState({ isLoading: false, error: e.message });\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    handleConfirmationSubmit = async event => {\n        event.preventDefault();\n\n        this.setState({ isLoading: true, error: null });\n\n        try {\n            await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n            await Auth.signIn(this.state.email, this.state.password);\n\n            this.props.userHasAuthenticated(true);\n            this.props.history.push(\"/\");\n        } catch (e) {\n            console.error(\"Could not signin to account\", e.message);\n            this.setState({ isLoading: false, error: e.message });\n        }\n    };\n\n    renderConfirmationForm() {\n        return (\n            <Form className=\"mt-5\" onSubmit={this.handleConfirmationSubmit}>\n                <FormGroup>\n                    <Label for=\"confirmationCode\">Confirmation Code</Label>\n                    <Input\n                        id=\"confirmationCode\"\n                        name=\"confirmationCode\"\n                        autoFocus\n                        type=\"tel\"\n                        defaultValue={this.state.confirmationCode}\n                        onChange={this.handleChange}\n                    />\n                    <FormText color=\"muted\">\n                        Please check your email for the code.\n                    </FormText>\n                </FormGroup>\n                <LoaderButton\n                    block\n                    disabled={!this.validateConfirmationForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Verify\"\n                    loadingText=\"Verifying...\"\n                />\n            </Form>\n        );\n    }\n\n    renderForm() {\n        return (\n            <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input\n                        autoFocus\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        defaultValue={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Input\n                        name=\"password\"\n                        id=\"password\"\n                        defaultValue={this.state.password}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"confirmPassword\">Confirm Password</Label>\n                    <Input\n                        name=\"confirmPassword\"\n                        id=\"confirmPassword\"\n                        defaultValue={this.state.confirmPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <LoaderButton\n                    block\n                    bsSize=\"large\"\n                    disabled={!this.validateForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Register\"\n                    loadingText=\"Register account...\"\n                />\n            </Form>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Signup\">\n                <Error error={this.state.error}/>\n                {this.state.newUser === null\n                    ? this.renderForm()\n                    : this.renderConfirmationForm()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {FormGroup, Input, Label} from 'reactstrap';\n\n\nconst RadioAnswer = ({answer, name, inline, selected, ...props}) => {\n    return (\n        <FormGroup className=\"\" check inline={inline}>\n            <Label for={name} check className=\"col-form-label\">\n                <Input type=\"radio\" name={name} defaultChecked={selected} value={answer} key={name} />{' '}\n                {answer}\n            </Label>\n        </FormGroup>\n    )\n};\n\nexport default RadioAnswer","import React from 'react';\nimport {Col, FormGroup, Label} from 'reactstrap';\nimport RadioAnswer from './RadioAnswer';\n\n\nconst RadioAnswers = ({questionId, question, required, answers, selectedAnswer, inline}) => {\n    return (\n        <FormGroup className=\"bg-warning\" row>\n            <Label for={questionId} sm={4}>{question} {required ? null : <p>(optional)</p>}</Label>\n            <Col sm={8}>\n            {answers.map((answer, i) => <RadioAnswer selected={answer===selectedAnswer} inline={inline} name={questionId} answer={answer} key={questionId + \"-\" + i}/>)}\n            </Col>\n        </FormGroup>\n    )\n};\n\nexport default RadioAnswers\n","import React from 'react';\nimport {Col, FormGroup, Input, Label} from 'reactstrap';\n\nconst TextAreaAnswer = ({questionId, question, required, answer}) => {\n    return (\n        <FormGroup className=\"bg-warning py-sm-1\" row>\n            <Label for={questionId} sm={4}>{question} {required ? null : <p>(optional)</p>}</Label>\n            <Col sm={8}>\n            <Input className=\"mb-2 mb-sm-0\" type=\"textarea\" name={questionId} id={questionId} defaultValue={answer}/>\n            </Col>\n        </FormGroup>\n    )\n};\n\nexport default TextAreaAnswer","import React from 'react';\nimport {Col, FormGroup, Input, Label} from 'reactstrap';\n\nconst TextBoxAnswer = ({questionId, question, required, answer}) => {\n    return (\n        <FormGroup className=\"bg-warning py-sm-1\" row>\n            <Label for={questionId} sm={4}>{question} {required ? null : <p>(optional)</p>}</Label>\n            <Col sm={8}>\n            <Input className=\"mb-2 mb-sm-0\" type=\"text\" name={questionId} id={questionId} defaultValue={answer}/>\n            </Col>\n        </FormGroup>\n    )\n};\n\nexport default TextBoxAnswer","import React from 'react';\nimport {Col, FormGroup, Label, Input} from 'reactstrap';\n\n\nconst SelectAnswers = ({questionId, question, required, answers, selectedAnswer}) => {\n    return (\n        <FormGroup className=\"bg-warning\" row>\n            <Label for={questionId} sm={4}>{question} {required ? null : <p>(optional)</p>}</Label>\n            <Col sm={8}>\n                <Input className=\"mb-2 mb-sm-0\" type=\"select\" name={questionId} id={questionId} defaultValue={selectedAnswer}>\n                    {answers.map((answer, i) => <option key={questionId + \"-\" + i}>{answer}</option>)}\n                </Input>\n            </Col>\n        </FormGroup>\n    )\n};\n\nexport default SelectAnswers\n","import React from \"react\";\nimport \"./Paragraphs.css\";\n\n/**\n * @param input split on \\n char and wrapped as paragraph tags\n * @returns div containing paragraphs\n */\nexport default ({ input, className }) =>\n    <div className={\"Paragraphs \"+ className}>\n        {input.split(\"\\n\").map((output, i) => <p key={i}>{output}</p>)}\n    </div>\n\n","import React, {Component} from 'react';\n\nimport RadioAnswers from '../components/RadioAnswers'\nimport TextAreaAnswer from '../components/TextAreaAnswer'\nimport TextBoxAnswer from '../components/TextBoxAnswer'\nimport SelectAnswers from '../components/SelectAnswers'\nimport {Button, Form, FormGroup, Container, ButtonGroup} from 'reactstrap';\nimport Paragraphs from '../components/Paragraphs';\n\nimport update from 'immutability-helper';\n\n/**\n * Render a page of questions.\n * Ensures that buttons are only enabled if fields have input.\n */\nexport default class Page extends Component {\n    constructor(allprops) {\n        super(allprops);\n\n        const {pageData, answers, previous, next, quit} = allprops;\n        this.pageData = pageData;\n\n        this.previous = previous;\n        this.next = next;\n        this.quit = quit;\n\n        this.state = {\n            answers: answers\n        };\n    }\n\n    handleSubmit = async callbackWith => {\n        const result = {\n            pageId: this.pageData.pageId,\n            answers: this.state.answers\n        };\n\n        callbackWith(result);\n    };\n\n    preventEnter = event => {\n        event.preventDefault();\n    };\n\n    handleChange = async event => {\n        const updatedAnswers = update(this.state.answers, {[event.target.name]: {$set: event.target.value}});\n        this.setState({answers: updatedAnswers});\n    };\n\n    getQuestionFromId = (questionId) => {\n        const matchedQuestions = this.pageData.questions.filter(question => question.questionId === questionId);\n        if(matchedQuestions.length !== 1) {\n            throw new Error(\"Could not find single question matching question id \" + questionId + \" from \" + JSON.stringify(this.pageData));\n        }\n\n        return matchedQuestions[0];\n    };\n\n    unansweredQuestions = () => {\n        // if any of the answers is empty then we return true\n        let questionIds = Object.keys(this.state.answers);\n        let unansweredQuestion = false;\n\n        questionIds.forEach(questionId => {\n            const question = this.getQuestionFromId(questionId);\n            if (question.required && this.state.answers[questionId] === \"\") {\n\n                unansweredQuestion = true;\n            }\n        });\n\n        return unansweredQuestion;\n    };\n\n    renderQuestions = questions => {\n        return questions.map((question, i) => {\n            if (question.type === 'radio') {\n                return <RadioAnswers key={i} questionId={question.questionId} question={question.question} required={question.required}\n                                     answers={question.answers} selectedAnswer={this.state.answers[question.questionId]}\n                                     inline/>\n            } else if (question.type === 'textarea') {\n                return <TextAreaAnswer key={i} questionId={question.questionId} question={question.question} required={question.required}\n                                   answer={this.state.answers[question.questionId]}/>\n            } else if (question.type === 'text') {\n                return <TextBoxAnswer key={i} questionId={question.questionId} question={question.question} required={question.required}\n                                   answer={this.state.answers[question.questionId]}/>\n            } else if (question.type === 'select') {\n                return <SelectAnswers key={i} questionId={question.questionId} question={question.question} required={question.required}\n                                      answers={question.answers} selectedAnswer={this.state.answers[question.questionId]}\n                                      inline/>\n            }\n            return <div>no questions</div>\n        });\n    };\n\n    render() {\n\n\n        return (\n            <Container>\n                <h2>{this.pageData.title}</h2>\n                <Paragraphs input={this.pageData.description} />\n                <Form onSubmit={this.preventEnter} onChange={this.handleChange}>\n\n                    {this.renderQuestions(this.pageData.questions)}\n\n                    <FormGroup inline row>\n                        <ButtonGroup sm={{offset: 0}}>\n\n                            {this.previous !== null ?\n                                <Button onClick={() => this.handleSubmit(this.previous)}>Previous</Button>\n                                : null\n                            }\n\n                            {this.next !== null ?\n                                <Button disabled={this.unansweredQuestions()}\n                                        onClick={() => this.handleSubmit(this.next)}>Next</Button>\n                                :\n                                <Button color=\"warning\" disabled={this.unansweredQuestions()}\n                                        onClick={() => this.handleSubmit(this.quit)}>Complete</Button>\n                            }\n                        </ButtonGroup>\n                    </FormGroup>\n                </Form>\n            </Container>\n        )\n    }\n}\n\n","import * as math from 'mathjs';\nimport { Cache } from \"aws-amplify\";\nimport {retrieveDataFile} from \"./DataLoader\";\n\nconst loadAdviceData = async () => {\n    Cache.setItem(\"adviceData\", []);\n    const auditData = await retrieveDataFile(\"advice.json\");\n    Cache.setItem(\"adviceData\", auditData, {expires: 3600000});\n    return auditData;\n};\n\nconst getCachedAdviceData = async () => {\n    return Cache.getItem(\"adviceData\", {callback: loadAdviceData});\n};\n\nconst getAdviceById = async (auditId) => {\n    const cachedAdviceData = await getCachedAdviceData();\n\n    const matching = cachedAdviceData.filter(eachAudit => eachAudit.auditId === auditId);\n    if (matching.length !== 1) {\n        throw new Error(\"Could not find advice with auditId \" +auditId);\n    }\n\n    // Found the audit data\n    return matching[0];\n};\n\nconst findScoresForAnswers = (pageAnswers, scores) => {\n    let calculationContext = {};\n    Object.keys(pageAnswers).forEach(answerId => {\n        // Look up scores for answerId, need to handle missing (if theres a non scoreable question)\n        let scoresForAnswerId = scores[answerId];\n        if (scoresForAnswerId) {\n            // Find the calculation and store on the calculationContext\n\n            const currentAnswer = pageAnswers[answerId];\n            let scoreForAnswer = scoresForAnswerId[currentAnswer];\n            // console.log(answerId + \" is \" + currentAnswer + \" which is scored \" + scoreForAnswer);\n            calculationContext[answerId] = scoreForAnswer;\n        }\n    });\n    return calculationContext;\n};\n\nconst convertScoreToAdviceFromResults = (scoreForPage, results) => {\n    const calcContext = {x: scoreForPage};\n\n    const matchingResult =  Object.keys(results).find(formula => {\n        return math.eval(formula, calcContext);\n    });\n\n    if (!matchingResult) throw new Error(\"Expected to match a score of \"+scoreForPage+\" from results \" +JSON.stringify(results));\n\n    return results[matchingResult];\n};\n\nexport const generateAdvice = async (audit, auditAnswers) => {\n\n    const adviceData = await getAdviceById(audit.auditId);\n    let adviceForAuditAnswers = {};\n    let overallCalculationContext = {};\n\n    Object.keys(auditAnswers).forEach(pageId => {\n        const pageAnswers = auditAnswers[pageId];\n        const adviceForPage = findPageById(adviceData, pageId);\n\n        if(adviceForPage) {\n            const {scores, formula, results} = adviceForPage;\n            if(scores && formula) {\n                // The page advice should apply the scoring and formula\n                // Calc score for each question for given pageAnswers\n\n                // Store the score for a given answer on the calculation context\n                let calculationContext = findScoresForAnswers(pageAnswers, scores);\n\n                // get score for current page using formula.\n                let scoreForPage = math.eval(formula, calculationContext);\n\n                overallCalculationContext[pageId] = scoreForPage;\n                const result = convertScoreToAdviceFromResults(scoreForPage, results);\n\n                adviceForAuditAnswers[pageId] = {\n                    score: scoreForPage,\n                    result: result\n                };\n            } else {\n                // Does the page have default advice\n                if(adviceForPage[\"default\"]) {\n                    // The page has generic advice (ie for text field only answers)\n                    adviceForAuditAnswers[pageId] = {\n                        result: adviceForPage[\"default\"]\n                    };\n                } else {\n                    console.warn(\"There is no advice defined for page \"+ pageId);\n                }\n            }\n        }\n\n    });\n\n    // Now calculate the general advice\n    if(adviceData.summary) {\n        if(adviceData.summary[\"default\"]) {\n            // The advice has just hard coded summary advice\n            adviceForAuditAnswers[\"summary\"] = {\n                result: adviceData.summary[\"default\"]\n            };\n        } else {\n            const overallSummaryScore = math.eval(adviceData.summary.formula, overallCalculationContext);\n            const advice = convertScoreToAdviceFromResults(overallSummaryScore, adviceData.summary.results);\n\n            // console.log(overallCalculationContext);\n            // console.log(adviceData.summary.formula);\n            // console.log(adviceData.summary.results);\n            // console.log(overallSummaryScore);\n            // console.log(advice);\n            // console.log(\"------------\");\n\n            adviceForAuditAnswers[\"summary\"] = {\n                score: overallSummaryScore,\n                result: advice\n            };\n        }\n    } else {\n        throw new Error(\"Invalid advice data, no summary section \" + JSON.stringify(adviceData));\n    }\n\n    return adviceForAuditAnswers;\n};\n\n\nexport const findPageById = (dataWithPages, pageId) => {\n    const matching = dataWithPages.pages.filter(advicePage => advicePage.pageId === pageId);\n\n    if (matching.length === 1) {\n        return matching[0];\n    }\n\n    return null;\n};\n","import React, {Component} from 'react';\n\nimport {Media, Button, Container, FormGroup, ButtonGroup} from 'reactstrap';\nimport {generateAdvice, findPageById} from '../../lib/AdviceData';\nimport {Link} from \"react-router-dom\";\nimport Paragraphs from '../components/Paragraphs';\nimport Error from '../../components/Error';\nimport PercentageCircle from '../../components/PercentageCircle';\n\nexport default class Advice extends Component {\n    constructor(props) {\n        super(props);\n\n        const {audit, auditAnswers, edit} = props;\n        this.audit = audit;\n        this.edit = edit;\n\n        this.state = {\n            auditAnswers: auditAnswers,\n            advice: null,\n            page: 0,\n            error: null\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            const advice = await generateAdvice(this.audit, this.state.auditAnswers);\n            this.setState({\n                advice: advice\n            });\n        } catch (e) {\n            this.setState({error: e.message});\n            console.error(\"Could not mount audit Advice\", e);\n        }\n    }\n\n    next = () => {\n        this.setState({page: this.state.page + 1});\n    };\n\n    previous = () => {\n        this.setState({page: this.state.page - 1});\n    };\n\n    renderScore = (score) => {\n        console.log(\"Score is \", score);\n        if(typeof score === 'undefined' || score === null || score < 0) return;\n\n        return <PercentageCircle\n            radius={40}\n            borderWidth={8}\n            percent={Math.round(score)}\n            color=\"#007bff\">\n        </PercentageCircle>\n    };\n\n\n    render() {\n        const advice = this.state.advice;\n\n        if (!advice) {\n            return <Container>\n                <Error error={this.state.error} />\n                <div>Loading...</div>\n            </Container>\n\n        }\n\n        // Go through each audit page and see if we have an advice for it and render\n        const advicePages = Object.keys(this.state.advice);\n\n        // console.log(\"All advice is \", this.state.advice);\n        const pageId = advicePages[this.state.page];\n        let advicePageData = this.state.advice[pageId];\n        // console.log(\"Rendering advice page \"+ this.state.page + \" which is \" + pageId, advicePageData);\n        // console.log(\"Audit, \",this.audit);\n\n        let auditPage = findPageById(this.audit, pageId);\n\n        if (!auditPage) {\n            // Last page (ie the summary)\n            auditPage = {\n                title: \"Summary\", //this.audit.title,\n                description: this.audit.description\n            };\n        }\n\n        return <Container>\n            <Error error={this.state.error} />\n            <h2>Advice for {this.audit.title}</h2>\n\n            <Media className=\"mt-4\" >\n                <Media className=\"align-self-center mr-sm-4 mr-1\" >\n                    {this.renderScore(advicePageData.score)}\n                </Media>\n                <Media body>\n                    <Media heading>{auditPage.title}</Media>\n                    <div>{auditPage.description}</div>\n                </Media>\n            </Media>\n\n            <Paragraphs className=\"mt-4\" input={advicePageData.result} />\n            <FormGroup inline row>\n                <ButtonGroup sm={{offset: 0}}>\n                    {this.state.page - 1 >= 0 ? <Button onClick={this.previous}>Previous</Button> : null}\n\n                    {this.state.page + 1 < advicePages.length ? <Button onClick={this.next}>Next</Button> :\n                        <Button color=\"warning\" tag={Link} to={`/`}>Close Advice</Button>\n                    }\n\n                    <Button color=\"danger\" onClick={this.edit}>Edit my answers</Button>\n                </ButtonGroup>\n            </FormGroup>\n        </Container>\n    }\n}","import React, {Component} from \"react\";\nimport Page from \"../audit/containers/Page\";\nimport Advice from \"../audit/containers/Advice\";\nimport {Container, Progress} from 'reactstrap';\nimport update from \"immutability-helper/index\";\n\nimport {lookupById} from \"../lib/AuditData\";\nimport {updateAudit, loadAuditById} from \"../lib/DataLoader\";\nimport Error from \"../components/Error\";\n\n\n/**\n * Handles loading audit data and displaying either the questions or the advice\n */\nexport default class Audit extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            audit: null,\n            currentPage: null,\n            auditAnswers: null,\n            complete: false,\n            error: null\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            const auditData = await loadAuditById(this.props.match.params.id);\n            const {auditAnswers, currentPage, complete} = auditData;\n            const audit = await lookupById(auditData.auditId);\n\n            this.setState({\n                audit: audit,\n                currentPage: currentPage,\n                auditAnswers: JSON.parse(auditAnswers),\n                complete: complete,\n                error: null\n            });\n        } catch (e) {\n            e.message = \"Could not load audit with id \" + this.props.match.params.id;\n            this.handleError(e);\n        }\n    }\n\n    handleError(e) {\n        this.setState({error: e.message});\n        console.error(\"Could not render Audit\", e);\n    }\n\n    toggleCompletedStateOfAudit = answersSubmitted => {\n        console.log(\"Setting completed state to \" + !this.state.complete);\n        let saved = this.saveSubmittedAnswers(answersSubmitted, this.state.currentPage, !this.state.complete);\n\n        saved.then(() => this.setState({complete: !this.state.complete}))\n            .catch(error => this.handleError(error));\n    };\n\n    previousPage = answersSubmitted => {\n        let pageNumber = this.state.currentPage - 1;\n        // console.log(\"Prev page pressed, new pagenumber is \", pageNumber);\n\n        let saved = this.saveSubmittedAnswers(answersSubmitted, pageNumber, this.state.complete);\n\n        saved.then(() => this.setState({currentPage: pageNumber}))\n            .catch(error => this.handleError(error));\n    };\n\n    nextPage = answersSubmitted => {\n        let pageNumber = this.state.currentPage + 1;\n        // console.log(\"Next page pressed, new pagenumber is \", pageNumber);\n\n        let saved = this.saveSubmittedAnswers(answersSubmitted, pageNumber, this.state.complete);\n        saved.then(() => this.setState({currentPage: pageNumber}))\n            .catch(error => this.handleError(error));\n\n    };\n\n\n    saveSubmittedAnswers = async (answersSubmitted, page, complete) => {\n        // console.log(\"Answer submitted \", answersSubmitted);\n        // console.log(\"current page is \", page);\n\n        const updatedAnswers = update(this.state.auditAnswers, {[answersSubmitted.pageId]: {$set: answersSubmitted.answers}});\n        this.setState({auditAnswers: updatedAnswers, error: null });\n\n        let toSave = {\n            currentPage: page,\n            auditAnswers: JSON.stringify(updatedAnswers),\n            complete: complete\n        };\n\n        return await updateAudit(this.props.match.params.id, toSave);\n    };\n\n\n    render() {\n        if (!this.state.auditAnswers) return  <Container><Error error={this.state.error}/><div>Loading...</div></Container>;\n\n        const totalPages = this.state.audit.pages.length;\n        const currentPage = this.state.currentPage;\n        const pageData = this.state.audit.pages[currentPage];\n\n        let prevPageFunction = currentPage - 1 >= 0 ? this.previousPage : null;\n        let nextPageFunction = currentPage + 1 < totalPages ? this.nextPage : null;\n        let viewAdviceFunction = currentPage + 1 >= totalPages ? this.toggleCompletedStateOfAudit : null;\n\n        if(this.state.complete && viewAdviceFunction) {\n            return <Advice key={pageData.pageId} auditAnswers={this.state.auditAnswers} audit={this.state.audit}\n                           edit={viewAdviceFunction}\n            />\n        }\n\n        let answers = this.state.auditAnswers[pageData.pageId];\n\n        return (\n            <Container>\n                <Error error={this.state.error}/>\n                <Page key={pageData.pageId} answers={answers} pageData={pageData}\n                      previous={prevPageFunction}\n                      next={nextPageFunction}\n                      quit={viewAdviceFunction}/>\n\n                <Progress value={((currentPage + 1) / totalPages * 100)}>Page {currentPage + 1}</Progress>\n            </Container>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Auth} from \"aws-amplify\";\nimport {Link} from \"react-router-dom\";\nimport {Form, FormGroup, FormText, Input, Label} from \"reactstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport Error from \"../components/Error\";\nimport \"./ResetPassword.css\";\nimport { TiTick } from 'react-icons/ti';\n\n\nexport default class ResetPassword extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            code: \"\",\n            email: \"\",\n            password: \"\",\n            codeSent: false,\n            confirmed: false,\n            confirmPassword: \"\",\n            isConfirming: false,\n            isSendingCode: false,\n            error: null\n        };\n    }\n\n    validateCodeForm() {\n        return this.state.email.length > 0;\n    }\n\n    validateResetForm() {\n        return (\n            this.state.code.length > 0 &&\n            this.state.password.length > 0 &&\n            this.state.password === this.state.confirmPassword\n        );\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    };\n\n    handleSendCodeClick = async event => {\n        event.preventDefault();\n\n        this.setState({isSendingCode: true, error: null});\n\n        try {\n            await Auth.forgotPassword(this.state.email);\n            this.setState({codeSent: true});\n        } catch (e) {\n            console.error(\"Could not send forgotten password code\",e.message);\n            this.setState({isSendingCode: false, error: e.message});\n        }\n    };\n\n    handleConfirmClick = async event => {\n        event.preventDefault();\n\n        this.setState({isConfirming: true, error: null});\n\n        try {\n            await Auth.forgotPasswordSubmit(\n                this.state.email,\n                this.state.code,\n                this.state.password\n            );\n            this.setState({confirmed: true});\n        } catch (e) {\n            console.error(\"Could not submit forgotten password\",e.message);\n            this.setState({isConfirming: false, error: e.message});\n        }\n    };\n\n    renderRequestCodeForm() {\n        return (\n            <Form className=\"mt-5\" onSubmit={this.handleSendCodeClick}>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input\n                        id=\"email\"\n                        name=\"email\"\n                        autoFocus\n                        type=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                </FormGroup>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    loadingText=\"Sending...\"\n                    text=\"Send Confirmation\"\n                    isLoading={this.state.isSendingCode}\n                    disabled={!this.validateCodeForm()}\n                />\n            </Form>\n        );\n    }\n\n    renderConfirmationForm() {\n        return (\n            <Form className=\"mt-5\" onSubmit={this.handleConfirmClick}>\n                <FormGroup>\n                    <Label for=\"code\">Confirmation Code</Label>\n                    <Input\n                        id=\"code\"\n                        name=\"code\"\n                        autoFocus\n                        type=\"tel\"\n                        value={this.state.code}\n                        onChange={this.handleChange}\n                    />\n                    <FormText>\n                        Please check your email ({this.state.email}) for the confirmation\n                        code.\n                    </FormText>\n                </FormGroup>\n                <hr/>\n                <FormGroup>\n                    <Label for=\"password\">New Password</Label>\n                    <Input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"confirmPassword\">Confirm Password</Label>\n                    <Input\n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        onChange={this.handleChange}\n                        value={this.state.confirmPassword}\n                    />\n                </FormGroup>\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    text=\"Confirm\"\n                    loadingText=\"Confirm...\"\n                    isLoading={this.state.isConfirming}\n                    disabled={!this.validateResetForm()}\n                />\n            </Form>\n        );\n    }\n\n    renderSuccessMessage() {\n        return (\n            <div className=\"success mt-5\">\n                <TiTick size=\"1.8em\"/>\n                <p>Your password has been reset.</p>\n                <p>\n                    <Link to=\"/login\">\n                        Click here to login with your new credentials.\n                    </Link>\n                </p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"ResetPassword\">\n                <Error error={this.state.error} />\n                {!this.state.codeSent\n                    ? this.renderRequestCodeForm()\n                    : !this.state.confirmed\n                        ? this.renderConfirmationForm()\n                        : this.renderSuccessMessage()}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Sorry, page not found!</h3>\n  </div>;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated\n        ? <C {...props} {...cProps} />\n        : <Redirect to={`/login?redirect=${props.location.pathname}${props.location.search}`} />}\n  />;","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return \"\";\n    }\n\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default ({ component: C, props: cProps, ...rest }) => {\n    const redirect = querystring(\"redirect\");\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                !cProps.isAuthenticated\n                    ? <C {...props} {...cProps} />\n                    : <Redirect\n                        to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n                    />}\n        />\n    );\n};","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\"\nimport Signup from \"./containers/Signup\";\nimport Audits from \"./containers/Audit\";\nimport ResetPassword from \"./containers/ResetPassword\";\n\nimport NotFound from \"./containers/NotFound\";\n\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\nexport default ({childProps}) =>\n    <Switch>\n        <AppliedRoute path=\"/\" exact component={Home} props={childProps}/>\n        <UnauthenticatedRoute path=\"/login\" exact component={Login} props={childProps}/>\n        <UnauthenticatedRoute path=\"/signup\" exact component={Signup} props={childProps}/>\n        <AuthenticatedRoute path=\"/id/:id\" exact component={Audits} props={childProps} />\n\n        <UnauthenticatedRoute\n            path=\"/login/reset\"\n            exact\n            component={ResetPassword}\n            props={childProps}\n        />\n\n        {/* Finally, catch all unmatched routes */}\n        <Route component={NotFound}/>\n    </Switch>;","import React, {Component, Fragment } from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse} from \"reactstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { Auth } from \"aws-amplify\";\n\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            navIsOpen: false,\n            isAuthenticated: false,\n            isAuthenticating: true,\n            error: null\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            await Auth.currentSession();\n            this.userHasAuthenticated(true);\n        }\n        catch(e) {\n            if (e !== 'No current user') {\n                console.error(e);\n                this.setState({ error: e.message });\n            }\n        }\n\n        this.setState({ isAuthenticating: false, error: null});\n    }\n\n    toggle() {\n        this.setState({\n            navIsOpen: !this.state.navIsOpen\n        });\n    }\n\n    userHasAuthenticated = authenticated => {\n        this.setState({ isAuthenticated: authenticated });\n    };\n\n    handleLogout = async event => {\n        await Auth.signOut();\n\n        this.userHasAuthenticated(false);\n        this.props.history.push(\"/login\");\n    };\n\n\n    render() {\n        const childProps = {\n            isAuthenticated: this.state.isAuthenticated,\n            userHasAuthenticated: this.userHasAuthenticated\n        };\n\n        return (\n            !this.state.isAuthenticating &&\n            <div >\n                <Navbar color=\"dark\" dark expand=\"md\">\n                    <NavbarBrand tag={Link} to=\"/\">Innovation Unboxed Audit</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle}/>\n                    <Collapse isOpen={this.state.navIsOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            {this.state.isAuthenticated\n                                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                                : <Fragment>\n                                    <NavItem>\n                                        <NavLink tag={Link} to=\"/signup\">Signup</NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink tag={Link} to=\"/login\">Login</NavLink>\n                                    </NavItem>\n                                </Fragment>\n                            }\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                <Container className=\"App\">\n                    <div>{this.state.error}</div>\n                    <Routes childProps={childProps} />\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const dev = {\n    s3: {\n        REGION: \"eu-west-1\",\n        BUCKET: \"innovation-unboxed-api-dev-auditdatabucket-2vfgpu8v8g4b\"\n    },\n    apiGateway: {\n        REGION: \"eu-west-1\",\n        URL: \"https://mci3dcagi4.execute-api.eu-west-1.amazonaws.com/dev\"\n    },\n    cognito: {\n        REGION: \"eu-west-1\",\n        USER_POOL_ID: \"eu-west-1_tUWdR4vMb\",\n        APP_CLIENT_ID: \"3rc4rvus0sg7pc5ffcifnpp8o3\",\n        IDENTITY_POOL_ID: \"eu-west-1:ce4df954-b775-41dc-9f24-42268b80f22d\"\n    }\n};\n\nconst prod = {\n    s3: {\n        REGION: \"eu-west-1\",\n        BUCKET: \"innovation-unboxed-api-prod-auditdatabucket-fk1bqk4tg4ek\"\n    },\n    apiGateway: {\n        REGION: \"eu-west-1\",\n        URL: \"https://2swp18lpg5.execute-api.eu-west-1.amazonaws.com/prod\"\n    },\n    cognito: {\n        REGION: \"eu-west-1\",\n        USER_POOL_ID: \"eu-west-1_LJFdECv4X\",\n        APP_CLIENT_ID: \"6v69u3gnaovvcljdeq4a7tlhh4\",\n        IDENTITY_POOL_ID: \"eu-west-1:a10eab50-4fc7-46cc-ad1b-1ed38a762423\"\n    }\n};\n\n// Default to dev if not set\nconst config = process.env.REACT_APP_STAGE === 'prod'\n    ? prod\n    : dev;\n\nexport default {\n    // Add common config values here\n    ...config\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\n\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n        region: config.s3.REGION,\n        bucket: config.s3.BUCKET,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID\n    },\n    API: {\n        endpoints: [\n            {\n                name: \"audits\",\n                endpoint: config.apiGateway.URL,\n                region: config.apiGateway.REGION\n            },\n        ]\n    }\n});\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}